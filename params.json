{"name":"Phantomizer","tagline":"Embedded web development environment, helps to build better HTML ui","body":"# phantomizer v0.1.x\r\n\r\n> Provides the command line to use a phantomizer project\r\n\r\nphantomizer embeds popular tools all together\r\nto provide an unified and easy to use html development environment.\r\n\r\nIt includes an embedded web browser to support live reloaded development, network perturbation generator, device previewer for mobile, a dashboard to let you do all of that.\r\n\r\nIt provides several ready to go automated process about build, test, export.\r\n\r\nIt includes several ready to use / configure GruntJS task oriented toward web development needs,\r\n- minification with requirejs, uglifyjs, htmlcompressor\r\n- image optimization\r\n- image spriting\r\n- html manifest support\r\n- test with qunit\r\n- documentation with docco and doccostyle\r\n- export project task\r\n- mobile device emulation preview\r\n- bandwidth and network latency perturbators\r\n- confess support\r\n- qrcode helper\r\n- preselected list of client side javascript libraries to consume\r\n\r\nThis tool simply tries to provide a simple way to build the newer kind of HTML UI we expect nowadays.\r\nIt relies on various well-known libraries to-do-the-job and pilot them thru the configuration file and the application you ll provide it.\r\n\r\n\r\n# General assumption\r\nThis project assume you want to make web application, and so provides tools to do it.\r\nIt aims to provide support to create both websites (multi pages / SEO) and webapp (one page).\r\nIt assumes that your websites has relatively small list of urls to build in case of a website.\r\nAs an example, at that time it builds 500 urls in ~2 mins under ubuntu 13 with an intel core i7.\r\nThis project assume that you want to build and create a one package application, it does not intend to work as a proxy for FEO.\r\n\r\n# Client side mandatory\r\nIt is mandatory to use phantomizer client side library to successfully build.\r\nAt least, it has never been tested and developed without that library included on client side.\r\nThat library helps you to take advantage of the different build stage available, you are strongly invited to use it in your development based on that tool.\r\n\r\n# Compatibility\r\nAs of nodeJS, that tool aims to be available on all majors OS.\r\nIt has actually been actively used under linux / macos / windows xp-vista\r\nMac OS setup has to be re tested and verified, some difficulties appeared because of sudo requirement to install binaries globally.\r\n\r\n\r\n# Installation\r\n```bash\r\nnpm install maboiteaspam/phantomizer\r\n```\r\n\r\nYou will be able to run this\r\n```bash\r\nnodes_modules/.bin/phantomizer --version\r\n```\r\n\r\n# Glocal CLI access\r\n```bash\r\nnpm install maboiteaspam/phantomizer -g\r\n```\r\n\r\nYou will be able to run this\r\n```bash\r\nphantomizer --version\r\n```\r\n\r\n# Usage\r\n```bash\r\nphantomizer --init <project_dir>\r\n\r\nphantomizer --server <project_dir> [ --environment <environment> ]\r\n\r\nphantomizer --test <project_dir> [ --environment <environment> ]\r\n\r\nphantomizer --export <project_dir> [ --environment <environment> ]\r\n\r\nphantomizer --document <project_dir>\r\n\r\nphantomizer --clean <project_dir>\r\n\r\nphantomizer --list_tasks <project_dir> [ --environment <environment> ]\r\n\r\nphantomizer --describe_task <project_dir> --task <task_name> [ --environment <environment> ]\r\n```\r\n\r\n# Start\r\n```bash\r\nphantomizer --init my_project\r\n\r\nphantomizer --server my_project\r\n```\r\n\r\nThe new directory my_project is now available.\r\n\r\nUsing the file my_project/config.json, you can add new routes and adjust settings to your preferences.\r\n\r\nAdd the new application files in the directory my_project/www-core/.\r\n\r\nmy_project/run is the storage folder used by phantomizer to build your project.\r\n\r\nmy_project/documentation contains the documented version of your scripts and css.\r\n\r\nmy_project/export contains the exported project files, ready to deploy.\r\n\r\n\r\n# The libraries you will find in there\r\n    phantomjs\r\n    https://github.com/senchalabs/connect\r\n    https://github.com/jacobrask/styledocco\r\n    https://github.com/jacobrask/docco\r\n    https://github.com/jrburke/requirejs\r\n    https://github.com/mishoo/UglifyJS\r\n    https://github.com/crowjonah/grunt-imgmin\r\n    https://github.com/gruntjs/grunt\r\n    https://github.com/jquery/qunit\r\n    https://github.com/gruntjs/grunt-contrib-qunit\r\n    https://github.com/jamesgpearce/confess\r\n    holmes\r\n    jshint\r\n    csslint\r\n    csslint\r\n\r\nClient side\r\n    https://github.com/jquery/jquery\r\n    knockout\r\n\r\n## Release History\r\n\r\n\r\n---\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}